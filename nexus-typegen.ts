/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./src/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AddCourseToUserResponse: { // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Course: { // root type
    courseTitle: string; // String!
    description?: string | null; // String
    id: string; // String!
    image?: string | null; // String
    price?: number | null; // Float
  }
  CreateCourseResponse: { // root type
    Course?: NexusGenRootTypes['Course'] | null; // Course
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  }
  CreateLessonResponse: { // root type
    code: number; // Int!
    lesson?: NexusGenRootTypes['Lesson'] | null; // Lesson
    message: string; // String!
    success: boolean; // Boolean!
  }
  CreateUserResponse: { // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Lesson: { // root type
    description?: string | null; // String
    id?: string | null; // String
    title?: string | null; // String
    video?: string | null; // String
  }
  Mutation: {};
  Query: {};
  Section: { // root type
    description?: string | null; // String
    id: string; // String!
    title?: string | null; // String
  }
  SubmitEmailResponse: { // root type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    user?: NexusGenRootTypes['User'] | null; // User
  }
  User: { // root type
    email: string; // String!
    firstName?: string | null; // String
    id: string; // String!
    lastName?: string | null; // String
    password?: string | null; // String
    username?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AddCourseToUserResponse: { // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    user: NexusGenRootTypes['User'] | null; // User
  }
  Course: { // field return type
    courseTitle: string; // String!
    description: string | null; // String
    id: string; // String!
    image: string | null; // String
    lessons: number; // Int!
    price: number | null; // Float
    sections: Array<NexusGenRootTypes['Section'] | null>; // [Section]!
  }
  CreateCourseResponse: { // field return type
    Course: NexusGenRootTypes['Course'] | null; // Course
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
  }
  CreateLessonResponse: { // field return type
    code: number; // Int!
    lesson: NexusGenRootTypes['Lesson'] | null; // Lesson
    message: string; // String!
    success: boolean; // Boolean!
  }
  CreateUserResponse: { // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    user: NexusGenRootTypes['User'] | null; // User
  }
  Lesson: { // field return type
    description: string | null; // String
    id: string | null; // String
    title: string | null; // String
    video: string | null; // String
  }
  Mutation: { // field return type
    AddCourseToUser: NexusGenRootTypes['AddCourseToUserResponse']; // AddCourseToUserResponse!
    CreateLesson: NexusGenRootTypes['CreateLessonResponse'] | null; // CreateLessonResponse
    CreateNewCourse: NexusGenRootTypes['CreateCourseResponse'] | null; // CreateCourseResponse
    CreateUser: NexusGenRootTypes['CreateUserResponse']; // CreateUserResponse!
    SubmitEmail: NexusGenRootTypes['SubmitEmailResponse']; // SubmitEmailResponse!
  }
  Query: { // field return type
    GetAllUsers: Array<NexusGenRootTypes['User'] | null>; // [User]!
    GetCourses: Array<NexusGenRootTypes['Course'] | null>; // [Course]!
    GetSingleCourse: NexusGenRootTypes['Course']; // Course!
    GetSingleLesson: NexusGenRootTypes['Lesson']; // Lesson!
    GetSingleUser: NexusGenRootTypes['User']; // User!
  }
  Section: { // field return type
    description: string | null; // String
    id: string; // String!
    lessons: Array<NexusGenRootTypes['Lesson'] | null>; // [Lesson]!
    title: string | null; // String
  }
  SubmitEmailResponse: { // field return type
    code: number; // Int!
    message: string; // String!
    success: boolean; // Boolean!
    user: NexusGenRootTypes['User'] | null; // User
  }
  User: { // field return type
    courses: Array<NexusGenRootTypes['Course'] | null>; // [Course]!
    email: string; // String!
    firstName: string | null; // String
    id: string; // String!
    lastName: string | null; // String
    password: string | null; // String
    username: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  AddCourseToUserResponse: { // field return type name
    code: 'Int'
    message: 'String'
    success: 'Boolean'
    user: 'User'
  }
  Course: { // field return type name
    courseTitle: 'String'
    description: 'String'
    id: 'String'
    image: 'String'
    lessons: 'Int'
    price: 'Float'
    sections: 'Section'
  }
  CreateCourseResponse: { // field return type name
    Course: 'Course'
    code: 'Int'
    message: 'String'
    success: 'Boolean'
  }
  CreateLessonResponse: { // field return type name
    code: 'Int'
    lesson: 'Lesson'
    message: 'String'
    success: 'Boolean'
  }
  CreateUserResponse: { // field return type name
    code: 'Int'
    message: 'String'
    success: 'Boolean'
    user: 'User'
  }
  Lesson: { // field return type name
    description: 'String'
    id: 'String'
    title: 'String'
    video: 'String'
  }
  Mutation: { // field return type name
    AddCourseToUser: 'AddCourseToUserResponse'
    CreateLesson: 'CreateLessonResponse'
    CreateNewCourse: 'CreateCourseResponse'
    CreateUser: 'CreateUserResponse'
    SubmitEmail: 'SubmitEmailResponse'
  }
  Query: { // field return type name
    GetAllUsers: 'User'
    GetCourses: 'Course'
    GetSingleCourse: 'Course'
    GetSingleLesson: 'Lesson'
    GetSingleUser: 'User'
  }
  Section: { // field return type name
    description: 'String'
    id: 'String'
    lessons: 'Lesson'
    title: 'String'
  }
  SubmitEmailResponse: { // field return type name
    code: 'Int'
    message: 'String'
    success: 'Boolean'
    user: 'User'
  }
  User: { // field return type name
    courses: 'Course'
    email: 'String'
    firstName: 'String'
    id: 'String'
    lastName: 'String'
    password: 'String'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    AddCourseToUser: { // args
      courseId: string; // String!
      userId: string; // String!
    }
    CreateLesson: { // args
      description: string; // String!
      sectionsId?: string | null; // String
      title: string; // String!
      video?: string | null; // String
    }
    CreateNewCourse: { // args
      courseTitle: string; // String!
      description: string; // String!
      image: string; // String!
      price: number; // Float!
    }
    CreateUser: { // args
      email: string; // String!
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
      username?: string | null; // String
    }
    SubmitEmail: { // args
      email: string; // String!
    }
  }
  Query: {
    GetSingleCourse: { // args
      id: string; // String!
    }
    GetSingleLesson: { // args
      id: string; // String!
    }
    GetSingleUser: { // args
      id: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}